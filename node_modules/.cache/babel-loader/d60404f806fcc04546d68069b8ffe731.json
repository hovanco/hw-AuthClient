{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/AuthClient/src/features/auth/pages/sign-up/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input, message, Tooltip, Divider } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { useForm } from 'antd/lib/form/Form';\nimport { pick, get } from 'lodash';\nimport * as queryString from 'query-string';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { loginWithEmail, signupWithEmail } from '../../../../api';\nimport { removeToken, setToken } from '../../../../api/token';\nimport AuthLayout from '../../../../components/auth-layout';\nimport { HOME_URL, STORE_URL } from '../../../../constants';\nimport FormHeader from '../../components/form-header/FormHeader';\nimport InnerAuth from '../../components/inner-auth/InnerAuth';\nimport { changeFormField } from '../../utils';\nimport FormBottom from '../../components/form-bottom/FormBottom';\nimport './style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst title = 'Đăng ký';\nconst subTitle = 'Bạn đã có tài khoản?';\nconst leftTitle = 'One of us?';\nconst acceptTitle = 'Bằng cách đăng ký, tôi đồng ý đã đọc và chấp nhận';\nconst termUse = 'Điều khoản sử dụng';\nconst privacyPolicy = 'Chính sách riêng tư';\nconst loginTitle = 'Đăng nhập';\nconst passwordWarning = 'Mật khẩu phải chứa tối thiểu 6 ký tự. Phân biệt viết thường và viết hoa.';\nconst contentBottom = 'Hoặc đăng ký với';\n\nconst getMessageError = error => {\n  const messageText = get(error, 'response.data.status');\n\n  if (messageText === 409) {\n    return 'Tài khoản đã tồn tại';\n  }\n\n  return 'Đăng ký không thành công.';\n};\n\nfunction SignUp() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const [form] = useForm();\n  const lastLocation = {\n    pathname: '/'\n  };\n  const search = queryString.stringify({\n    url: `${STORE_URL}save-token`,\n    location: JSON.stringify(lastLocation),\n    isLogout: true\n  });\n  const searchState = queryString.parse(history.location.search);\n\n  const redirectAppPage = token => {\n    let objectSearch = {\n      token: JSON.stringify(token),\n      remember: true,\n      location: '/',\n      isHasStore: false\n    };\n\n    if (searchState.saleChannel) {\n      objectSearch = { ...objectSearch,\n        saleChannel: searchState.saleChannel\n      };\n    }\n\n    const search = queryString.stringify(objectSearch);\n    window.location.href = `${STORE_URL}save-token?${search}`;\n  };\n\n  useEffect(() => {\n    if (!searchState.url || !searchState.location) {\n      history.push('/sign-up');\n    } else {\n      localStorage.removeItem('shortLiveToken');\n      removeToken();\n    }\n  }, []);\n\n  const onFinish = async values => {\n    setLoading(true);\n    const data = pick(values, 'name', 'email', 'password');\n    signupWithEmail(data).then(async () => {\n      const response = await loginWithEmail({ ...pick(data, ['email', 'password'])\n      });\n\n      if (!response.accessToken) {\n        message.error('Xảy ra lỗi, vui lòng kiểm tra lại');\n        return;\n      }\n\n      setToken({\n        token: response,\n        remember: true\n      });\n      redirectAppPage(response);\n    }).catch(error => {\n      const messageError = getMessageError(error);\n      message.error(messageError);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthLayout, {\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(InnerAuth, {\n        authContent: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"auth-content-title\",\n            children: leftTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"submit\",\n            block: true,\n            className: \"auth-content-button\",\n            onClick: () => {\n              history.push(`/login${history.location.search}`);\n            },\n            children: loginTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FormHeader, {\n            title: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              marginTop: '-25px'\n            },\n            onFinish: onFinish,\n            layout: \"vertical\",\n            className: \"form\",\n            form: form,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"form-content-title\",\n                children: [subTitle, ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `/login?${search}`,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"login-title \",\n                    style: {\n                      fontWeight: 400\n                    },\n                    children: loginTitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"name\",\n                rules: [{\n                  required: true,\n                  message: 'Vui lòng nhập Tên'\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  size: \"large\",\n                  placeholder: \"H\\u1ECD t\\xEAn\",\n                  onChange: event => changeFormField(form, 'name', event.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"password\",\n                required: true,\n                rules: [{\n                  required: true,\n                  message: 'Vui lòng nhập Mật khẩu'\n                }, {\n                  min: 6,\n                  message: 'Vui lòng nhập mật khẩu phải chứa tối thiểu 6 ký tự'\n                }],\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"format-input-password-sign-up\",\n                  children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                    size: \"large\",\n                    type: \"password\",\n                    placeholder: \"M\\u1EADt kh\\u1EA9u\",\n                    addonAfter: /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: passwordWarning,\n                      color: '#4353ff',\n                      children: /*#__PURE__*/_jsxDEV(InfoCircleOutlined, {\n                        style: {\n                          color: '#4353ff'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"passwordConfirm\",\n                required: true,\n                dependencies: ['password'],\n                hasFeedback: true,\n                rules: [{\n                  required: true,\n                  message: 'Vui lòng xác nhận Mật khẩu'\n                }, ({\n                  getFieldValue\n                }) => ({\n                  validator(rule, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    } // eslint-disable-next-line prefer-promise-reject-errors\n\n\n                    return Promise.reject('Mật khẩu không trùng khớp');\n                  }\n\n                })],\n                children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                  size: \"large\",\n                  type: \"password\",\n                  placeholder: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-content-pivacy\",\n                children: [acceptTitle, ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `${HOME_URL}dieu-khoan-su-dung`,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: termUse\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 37\n                }, this), ' ', \"v\\xE0\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `${HOME_URL}chinh-sach-bao-mat`,\n                  target: \"_blank\",\n                  rel: \"noreferrer\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: privacyPolicy\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                className: \"button-sign-up\",\n                loading: loading,\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormBottom, {\n                title: contentBottom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignUp, \"CzGWBisDsyLPEfK3CmfopImMrWg=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AuthClient/src/features/auth/pages/sign-up/index.tsx"],"names":["Button","Form","Input","message","Tooltip","Divider","InfoCircleOutlined","useForm","pick","get","queryString","React","useEffect","useState","useHistory","loginWithEmail","signupWithEmail","removeToken","setToken","AuthLayout","HOME_URL","STORE_URL","FormHeader","InnerAuth","changeFormField","FormBottom","title","subTitle","leftTitle","acceptTitle","termUse","privacyPolicy","loginTitle","passwordWarning","contentBottom","getMessageError","error","messageText","SignUp","loading","setLoading","history","form","lastLocation","pathname","search","stringify","url","location","JSON","isLogout","searchState","parse","redirectAppPage","token","objectSearch","remember","isHasStore","saleChannel","window","href","push","localStorage","removeItem","onFinish","values","data","then","response","accessToken","catch","messageError","finally","marginTop","fontWeight","required","event","target","value","min","color","getFieldValue","validator","rule","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import { Button, Form, Input, message, Tooltip, Divider } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { useForm } from 'antd/lib/form/Form';\nimport { pick, get } from 'lodash';\nimport * as queryString from 'query-string';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { loginWithEmail, signupWithEmail } from '../../../../api';\nimport { IToken, removeToken, setToken } from '../../../../api/token';\nimport AuthLayout from '../../../../components/auth-layout';\nimport { HOME_URL, STORE_URL } from '../../../../constants';\nimport FormHeader from '../../components/form-header/FormHeader';\nimport InnerAuth from '../../components/inner-auth/InnerAuth';\nimport { changeFormField } from '../../utils';\nimport FormBottom from '../../components/form-bottom/FormBottom';\nimport './style.less';\n\nconst title = 'Đăng ký';\nconst subTitle = 'Bạn đã có tài khoản?';\nconst leftTitle = 'One of us?';\nconst acceptTitle = 'Bằng cách đăng ký, tôi đồng ý đã đọc và chấp nhận';\nconst termUse = 'Điều khoản sử dụng';\nconst privacyPolicy = 'Chính sách riêng tư';\nconst loginTitle = 'Đăng nhập';\nconst passwordWarning =\n    'Mật khẩu phải chứa tối thiểu 6 ký tự. Phân biệt viết thường và viết hoa.';\nconst contentBottom = 'Hoặc đăng ký với';\ninterface FormData {\n    name?: string;\n    email?: string;\n    password?: string;\n    passwordConfirm?: string;\n}\n\nconst getMessageError = (error: Error): string => {\n    const messageText = get(error, 'response.data.status');\n    if (messageText === 409) {\n        return 'Tài khoản đã tồn tại';\n    }\n\n    return 'Đăng ký không thành công.';\n};\n\nfunction SignUp(): JSX.Element {\n    const [loading, setLoading] = useState<boolean>(false);\n    const history = useHistory();\n    const [form] = useForm();\n    const lastLocation = {\n        pathname: '/',\n    };\n\n    const search = queryString.stringify({\n        url: `${STORE_URL}save-token`,\n        location: JSON.stringify(lastLocation),\n        isLogout: true,\n    });\n\n    const searchState: {\n        url?: string;\n        location?: string;\n        isLogout?: string;\n        saleChannel?: string;\n        isHasStore?: boolean;\n    } = queryString.parse(history.location.search);\n\n    const redirectAppPage = (token: IToken) => {\n        let objectSearch: any = {\n            token: JSON.stringify(token),\n            remember: true,\n            location: '/',\n            isHasStore: false,\n        };\n\n        if (searchState.saleChannel) {\n            objectSearch = {\n                ...objectSearch,\n                saleChannel: searchState.saleChannel,\n            };\n        }\n\n        const search = queryString.stringify(objectSearch);\n\n        window.location.href = `${STORE_URL}save-token?${search}`;\n    };\n\n    useEffect(() => {\n        if (!searchState.url || !searchState.location) {\n            history.push('/sign-up');\n        } else {\n            localStorage.removeItem('shortLiveToken');\n            removeToken();\n        }\n    }, []);\n\n    const onFinish = async (values: FormData): Promise<void> => {\n        setLoading(true);\n\n        const data = pick(values, 'name', 'email', 'password');\n\n        signupWithEmail(data)\n            .then(async () => {\n                const response: any = await loginWithEmail({\n                    ...pick(data, ['email', 'password']),\n                });\n                if (!response.accessToken) {\n                    message.error('Xảy ra lỗi, vui lòng kiểm tra lại');\n                    return;\n                }\n                setToken({ token: response, remember: true });\n                redirectAppPage(response);\n            })\n            .catch(error => {\n                const messageError = getMessageError(error);\n\n                message.error(messageError);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <>\n            <AuthLayout title={title}>\n                <InnerAuth\n                    authContent={\n                        <div>\n                            <p className=\"auth-content-title\">{leftTitle}</p>\n                            <Button\n                                htmlType=\"submit\"\n                                block\n                                className=\"auth-content-button\"\n                                onClick={() => {\n                                    history.push(\n                                        `/login${history.location.search}`,\n                                    );\n                                }}\n                            >\n                                {loginTitle}\n                            </Button>\n                        </div>\n                    }\n                >\n                    <div>\n                        <FormHeader title={title} />\n                        <Form\n                            style={{ marginTop: '-25px' }}\n                            onFinish={onFinish}\n                            layout=\"vertical\"\n                            className=\"form\"\n                            form={form}\n                        >\n                            <div className=\"form-content\">\n                                <p className=\"form-content-title\">\n                                    {subTitle}{' '}\n                                    <a href={`/login?${search}`}>\n                                        <span\n                                            className=\"login-title \"\n                                            style={{ fontWeight: 400 }}\n                                        >\n                                            {loginTitle}\n                                        </span>\n                                    </a>\n                                </p>\n                                {/* <Form.Item\n                                    name=\"email\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Vui lòng nhập Email',\n                                        },\n                                        {\n                                            type: 'email',\n                                            message: 'Email không hợp lệ',\n                                        },\n                                    ]}\n                                >\n                                    <Input\n                                        size=\"large\"\n                                        placeholder=\"Email\"\n                                        onChange={(\n                                            event: React.ChangeEvent<HTMLInputElement>,\n                                        ) =>\n                                            changeFormField(\n                                                form,\n                                                'email',\n                                                event.target.value,\n                                            )\n                                        }\n                                    />\n                                </Form.Item> */}\n                                <Form.Item\n                                    name=\"name\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Vui lòng nhập Tên',\n                                        },\n                                    ]}\n                                >\n                                    <Input\n                                        size=\"large\"\n                                        placeholder=\"Họ tên\"\n                                        onChange={(\n                                            event: React.ChangeEvent<HTMLInputElement>,\n                                        ) =>\n                                            changeFormField(\n                                                form,\n                                                'name',\n                                                event.target.value,\n                                            )\n                                        }\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"password\"\n                                    required\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Vui lòng nhập Mật khẩu',\n                                        },\n                                        {\n                                            min: 6,\n                                            message:\n                                                'Vui lòng nhập mật khẩu phải chứa tối thiểu 6 ký tự',\n                                        },\n                                    ]}\n                                >\n                                    <div className=\"format-input-password-sign-up\">\n                                        <Input.Password\n                                            size=\"large\"\n                                            type=\"password\"\n                                            placeholder=\"Mật khẩu\"\n                                            addonAfter={\n                                                <Tooltip\n                                                    title={passwordWarning}\n                                                    color={'#4353ff'}\n                                                >\n                                                    <InfoCircleOutlined\n                                                        style={{\n                                                            color: '#4353ff',\n                                                        }}\n                                                    />\n                                                </Tooltip>\n                                            }\n                                        />\n                                    </div>\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"passwordConfirm\"\n                                    required\n                                    dependencies={['password']}\n                                    hasFeedback\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Vui lòng xác nhận Mật khẩu',\n                                        },\n                                        ({ getFieldValue }) => ({\n                                            validator(rule, value) {\n                                                if (\n                                                    !value ||\n                                                    getFieldValue(\n                                                        'password',\n                                                    ) === value\n                                                ) {\n                                                    return Promise.resolve();\n                                                }\n                                                // eslint-disable-next-line prefer-promise-reject-errors\n                                                return Promise.reject(\n                                                    'Mật khẩu không trùng khớp',\n                                                );\n                                            },\n                                        }),\n                                    ]}\n                                >\n                                    <Input.Password\n                                        size=\"large\"\n                                        type=\"password\"\n                                        placeholder=\"Xác nhận mật khẩu\"\n                                    />\n                                </Form.Item>\n                                <div className=\"form-content-pivacy\">\n                                    {acceptTitle}{' '}\n                                    <a href={`${HOME_URL}dieu-khoan-su-dung`} target=\"_blank\" rel=\"noreferrer\">\n                                        <span>{termUse}</span>\n                                    </a>{' '}\n                                    và{' '}\n                                    <a href={`${HOME_URL}chinh-sach-bao-mat`} target=\"_blank\" rel=\"noreferrer\">\n                                        <span>{privacyPolicy}</span>\n                                    </a>\n                                </div>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    className=\"button-sign-up\"\n                                    loading={loading}\n                                >\n                                    {title}\n                                </Button>\n                                <Divider />\n                                <FormBottom title={contentBottom} />\n                            </div>\n                        </Form>\n                    </div>\n                </InnerAuth>\n            </AuthLayout>\n        </>\n    );\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}