{"ast":null,"code":"import axios from 'axios';\nimport queryString from 'query-string';\nimport { URL_API } from '../constants';\nconst axiosClient = axios.create({\n  baseURL: URL_API,\n  headers: {\n    'content-type': 'application/json'\n  },\n  paramsSerializer: params => queryString.stringify(params)\n});\naxiosClient.interceptors.request.use(async config => {\n  // Handle token here ...\n  return config;\n});\naxiosClient.interceptors.response.use(response => {\n  if (response && response.data) {\n    return response.data;\n  }\n\n  return response;\n}, error => {\n  // Handle errors\n  throw error;\n});\nexport { axiosClient };","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AuthClient/src/api/axiosClient.ts"],"names":["axios","queryString","URL_API","axiosClient","create","baseURL","headers","paramsSerializer","params","stringify","interceptors","request","use","config","response","data","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAEH,OADoB;AAE7BI,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX,GAFoB;AAK7BC,EAAAA,gBAAgB,EAAEC,MAAM,IAAIP,WAAW,CAACQ,SAAZ,CAAsBD,MAAtB;AALC,CAAb,CAApB;AAQAL,WAAW,CAACO,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAqC,MAAMC,MAAN,IAAgB;AACjD;AACA,SAAOA,MAAP;AACH,CAHD;AAKAV,WAAW,CAACO,YAAZ,CAAyBI,QAAzB,CAAkCF,GAAlC,CACIE,QAAQ,IAAI;AACR,MAAIA,QAAQ,IAAIA,QAAQ,CAACC,IAAzB,EAA+B;AAC3B,WAAOD,QAAQ,CAACC,IAAhB;AACH;;AAED,SAAOD,QAAP;AACH,CAPL,EAQIE,KAAK,IAAI;AACL;AACA,QAAMA,KAAN;AACH,CAXL;AAcA,SAAQb,WAAR","sourcesContent":["import axios from 'axios';\nimport queryString from 'query-string';\nimport {URL_API} from '../constants';\n\nconst axiosClient = axios.create({\n    baseURL: URL_API,\n    headers: {\n        'content-type': 'application/json',\n    },\n    paramsSerializer: params => queryString.stringify(params),\n});\n\naxiosClient.interceptors.request.use(async config => {\n    // Handle token here ...\n    return config;\n});\n\naxiosClient.interceptors.response.use(\n    response => {\n        if (response && response.data) {\n            return response.data;\n        }\n\n        return response;\n    },\n    error => {\n        // Handle errors\n        throw error;\n    },\n);\n\nexport {axiosClient};\n"]},"metadata":{},"sourceType":"module"}