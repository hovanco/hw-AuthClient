{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/AuthClient/src/features/auth/pages/reset-password/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input, message, Tooltip } from 'antd';\nimport { InfoCircleOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as queryString from 'query-string';\nimport { get } from 'lodash';\nimport { resetPassword } from '../../../../api';\nimport { STORE_URL } from '../../../../configs/vars';\nimport AuthLayout from '../../../../components/auth-layout';\nimport FormHeader from '../../components/form-header/FormHeader';\nimport InnerAuth from '../../components/inner-auth/InnerAuth';\nimport { errorCommon } from '../forgot-password';\nimport './style.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst title = 'Đặt lại mật khẩu';\nconst subTitle = '';\nconst subTitleSuccess = 'Mật khẩu của bạn đã được thay đổi thành công';\nconst loginTitle = 'Đăng nhập';\nconst errorExpireToken = 'Token của bạn đã hết hạn, vui lòng kiểm tra lại';\nconst passwordWarning = 'Mật khẩu phải chứa tối thiểu 6 ký tự. Phân biệt viết thường và viết hoa.';\n\nconst ResetPassword = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const history = useHistory();\n  const searchState = queryString.parse(history.location.search);\n\n  const onClickLogin = () => {\n    const search = queryString.stringify({\n      url: `${STORE_URL}save-token`,\n      location: JSON.stringify({\n        pathname: '/'\n      }),\n      isLogout: true\n    });\n    history.push(`/login?${search}`);\n  };\n\n  useEffect(() => {\n    if (!searchState.token) {\n      history.push('/reset-password');\n    }\n  }, []);\n\n  const handleSubmit = async value => {\n    try {\n      setLoading(true);\n      const response = await resetPassword({\n        password: value.password,\n        token: searchState.token\n      });\n\n      if ((response === null || response === void 0 ? void 0 : response.status) !== 200) {\n        message.error(errorCommon);\n        return;\n      }\n\n      setSuccess(true);\n    } catch (error) {\n      const errorMessage = get(error, 'response.data.message') === 'TOKEN_EXPIRED' ? errorExpireToken : errorCommon;\n      message.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthLayout, {\n    title: title,\n    children: /*#__PURE__*/_jsxDEV(InnerAuth, {\n      authContent: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          block: true,\n          className: \"auth-content-button\",\n          onClick: onClickLogin,\n          children: loginTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FormHeader, {\n          title: title,\n          showSocialLogin: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onFinish: handleSubmit,\n          layout: \"vertical\",\n          className: \"form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-content\",\n            children: success ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"form-content-title\",\n                children: subTitleSuccess\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                block: true,\n                className: \"auth-content-button\",\n                type: \"primary\",\n                onClick: onClickLogin,\n                children: loginTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"form-content-title\",\n                children: subTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"password\",\n                rules: [{\n                  required: true,\n                  message: 'Nhập mật khẩu'\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  placeholder: \"M\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n                  className: \"input-auth\",\n                  suffix: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(EyeInvisibleOutlined, {\n                      className: \"icon-eye-password \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: passwordWarning,\n                      color: '#4353ff',\n                      children: /*#__PURE__*/_jsxDEV(InfoCircleOutlined, {\n                        style: {\n                          color: '#4353ff'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"confirm\",\n                dependencies: ['password'],\n                rules: [{\n                  required: true,\n                  message: 'Nhập mật khẩu'\n                }, ({\n                  getFieldValue\n                }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n\n                    return Promise.reject(new Error('Hai mật khẩu bạn đã nhập không giống nhau!'));\n                  }\n\n                })],\n                children: /*#__PURE__*/_jsxDEV(Input.Password, {\n                  type: \"password\",\n                  placeholder: \"X\\xE1c nh\\u1EADn m\\u1EADt kh\\u1EA9u m\\u1EDBi\",\n                  className: \"input-auth\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                className: \"form-button\",\n                loading: loading,\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResetPassword, \"S84VBGZdRRNYORr0rNrIy729CrU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AuthClient/src/features/auth/pages/reset-password/index.tsx"],"names":["Button","Form","Input","message","Tooltip","InfoCircleOutlined","EyeInvisibleOutlined","React","useEffect","useState","useHistory","queryString","get","resetPassword","STORE_URL","AuthLayout","FormHeader","InnerAuth","errorCommon","title","subTitle","subTitleSuccess","loginTitle","errorExpireToken","passwordWarning","ResetPassword","loading","setLoading","success","setSuccess","history","searchState","parse","location","search","onClickLogin","stringify","url","JSON","pathname","isLogout","push","token","handleSubmit","value","response","password","status","error","errorMessage","required","color","getFieldValue","validator","_","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import { Button, Form, Input, message, Tooltip, Divider } from 'antd';\nimport { InfoCircleOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport { Store } from 'antd/lib/form/interface';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as queryString from 'query-string';\nimport { get } from 'lodash';\n\nimport { resetPassword } from '../../../../api';\nimport { STORE_URL } from '../../../../configs/vars';\nimport AuthLayout from '../../../../components/auth-layout';\nimport FormHeader from '../../components/form-header/FormHeader';\nimport InnerAuth from '../../components/inner-auth/InnerAuth';\nimport { errorCommon } from '../forgot-password';\nimport './style.less';\n\nconst title = 'Đặt lại mật khẩu';\nconst subTitle = '';\nconst subTitleSuccess = 'Mật khẩu của bạn đã được thay đổi thành công';\nconst loginTitle = 'Đăng nhập';\nconst errorExpireToken = 'Token của bạn đã hết hạn, vui lòng kiểm tra lại';\nconst passwordWarning = 'Mật khẩu phải chứa tối thiểu 6 ký tự. Phân biệt viết thường và viết hoa.';\n\nexport interface ResetPasswordProps {}\n\nconst ResetPassword: FC<ResetPasswordProps> = () => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const [success, setSuccess] = useState<boolean>(false);\n    const history = useHistory();\n\n    const searchState: {\n        token?: string;\n    } = queryString.parse(history.location.search);\n\n    const onClickLogin = () => {\n        const search = queryString.stringify({\n            url: `${STORE_URL}save-token`,\n            location: JSON.stringify({\n                pathname: '/',\n            }),\n            isLogout: true,\n        });\n        history.push(`/login?${search}`);\n    };\n\n    useEffect(() => {\n        if (!searchState.token) {\n            history.push('/reset-password');\n        }\n    }, []);\n\n    const handleSubmit = async (value: Store): Promise<void> => {\n        try {\n            setLoading(true);\n            const response = await resetPassword({\n                password: value.password,\n                token: searchState.token,\n            });\n            if (response?.status !== 200) {\n                message.error(errorCommon);\n                return;\n            }\n            setSuccess(true);\n        } catch (error) {\n            const errorMessage =\n                get(error, 'response.data.message') === 'TOKEN_EXPIRED'\n                    ? errorExpireToken\n                    : errorCommon;\n            message.error(errorMessage);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <AuthLayout title={title}>\n            <InnerAuth\n                authContent={\n                    <div>\n                        <Button\n                            htmlType='submit'\n                            block\n                            className='auth-content-button'\n                            onClick={onClickLogin}\n                        >\n                            {loginTitle}\n                        </Button>\n                    </div>\n                }\n            >\n                <div>\n                    <FormHeader title={title} showSocialLogin={false} />\n\n                    <Form onFinish={handleSubmit} layout='vertical' className='form'>\n                        <div className='form-content'>\n                            {success ? (\n                                <>\n                                    <p className='form-content-title'>{subTitleSuccess}</p>\n                                    <Button\n                                        block\n                                        className='auth-content-button'\n                                        type='primary'\n                                        onClick={onClickLogin}\n                                    >\n                                        {loginTitle}\n                                    </Button>\n                                </>\n                            ) : (\n                                <>\n                                    <p className='form-content-title'>{subTitle}</p>\n\n                                    <Form.Item\n                                        name='password'\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Nhập mật khẩu',\n                                            },\n                                        ]}\n                                    >\n                                        <Input\n                                            type='password'\n                                            placeholder='Mật khẩu mới'\n                                            className='input-auth'\n                                            suffix={\n                                                <>\n                                                    <EyeInvisibleOutlined className='icon-eye-password ' />\n                                                    <Tooltip\n                                                        title={passwordWarning}\n                                                        color={'#4353ff'}\n                                                    >\n                                                        <InfoCircleOutlined\n                                                            style={{ color: '#4353ff' }}\n                                                        />\n                                                    </Tooltip>\n                                                </>\n                                            }\n                                        />\n                                    </Form.Item>\n\n                                    <Form.Item\n                                        name='confirm'\n                                        dependencies={['password']}\n                                        rules={[\n                                            {\n                                                required: true,\n                                                message: 'Nhập mật khẩu',\n                                            },\n                                            ({ getFieldValue }) => ({\n                                                validator(_, value) {\n                                                    if (\n                                                        !value ||\n                                                        getFieldValue('password') === value\n                                                    ) {\n                                                        return Promise.resolve();\n                                                    }\n                                                    return Promise.reject(\n                                                        new Error(\n                                                            'Hai mật khẩu bạn đã nhập không giống nhau!',\n                                                        ),\n                                                    );\n                                                },\n                                            }),\n                                        ]}\n                                    >\n                                        <Input.Password\n                                            type='password'\n                                            placeholder='Xác nhận mật khẩu mới'\n                                            className='input-auth'\n                                        />\n                                    </Form.Item>\n\n                                    <Button\n                                        type='primary'\n                                        htmlType='submit'\n                                        className='form-button'\n                                        loading={loading}\n                                    >\n                                        {title}\n                                    </Button>\n                                </>\n                            )}\n                        </div>\n                    </Form>\n                </div>\n            </InnerAuth>\n        </AuthLayout>\n    );\n};\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}